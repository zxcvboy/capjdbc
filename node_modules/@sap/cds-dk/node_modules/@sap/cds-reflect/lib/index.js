const { extend, lazify } = require ('./core/lazy')
const core = new class cds extends require('events'){}
const c = lazy => cds.builtin.classes [lazy]
require = lazify(module)  // eslint-disable-line

const cds = module.exports = { __proto__:core,

	// Builtin types and classes
	builtin: require ('./core/csn'),
	Association:c, Composition:c,
	service:c,
	entity:c,
	struct:c,
	type:c,
	array:c,

	// Reflection
	reflect: require ('./core/reflect'),
	linked: require ('./core/linked'),
	infer: require ('./ql/infer'),

	// Helpers
	Iterable: class { *[Symbol.iterator]() {for (let e in this) yield this[e]}},
	lazified:lazify, lazify, extend,
	clone: m => JSON.parse (JSON.stringify(m)),

}
