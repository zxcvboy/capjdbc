'use strict';
/* eslint-disable global-require */

module.exports = {
    FullQualifiedName: require('./lib/FullQualifiedName'),
    FeatureSupport: require('./lib/FeatureSupport'),
    csdl: {
        CsdlJsonProvider: require('./lib/csdl/CsdlJsonProvider'),
        annotationExpression: {
            CsdlAnnotationExpression: require('./lib/csdl/annotationExpression/CsdlAnnotationExpression')
        }
    },
    edm: {
        EdmProvider: require('./lib/edm/EdmProvider'),
        EdmType: require('./lib/edm/EdmType'),
        EdmPrimitiveType: require('./lib/edm/EdmPrimitiveType'),
        EdmPrimitiveTypeKind: require('./lib/edm/EdmPrimitiveTypeKind')
    },
    errors: {
        IllegalArgumentError: require('./lib/errors/IllegalArgumentError'),
        AbstractError: require('./lib/errors/AbstractError'),
        NotImplementedError: require('./lib/errors/NotImplementedError'),
        UriSyntaxError: require('./lib/errors/UriSyntaxError'),
        UriSemanticError: require('./lib/errors/UriSemanticError'),
        UriQueryOptionSemanticError: require('./lib/errors/UriQueryOptionSemanticError')
    },
    format: {
        RepresentationKind: require('./lib/format/RepresentationKind'),
        ContentTypeInfo: require('./lib/format/ContentTypeInfo'),
        JsonContentTypeInfo: require('./lib/format/JsonContentTypeInfo'),
        JsonFormat: require('./lib/format/JsonFormat')
    },
    http: {
        HttpStatusCode: require('./lib/http/HttpStatusCode'),
        HttpMethod: require('./lib/http/HttpMethod'),
        HttpHeader: require('./lib/http/HttpHeader'),
        HttpHeaderReader: require('./lib/http/HttpHeaderReader'),
        Preferences: require('./lib/http/Preferences')
    },
    logging: {
        LoggerFacade: require('./lib/logging/LoggerFacade')
    },
    uri: {
        UriParser: require('./lib/uri/UriParser'),
        UriHelper: require('./lib/uri/UriHelper'),
        UriResource: require('./lib/uri/UriResource'),
        UriInfo: require('./lib/uri/UriInfo'),
        UriParameter: require('./lib/uri/UriParameter'),
        ExpandItem: require('./lib/uri/ExpandItem'),
        SelectItem: require('./lib/uri/SelectItem'),
        Expression: require('./lib/uri/Expression'),
        BinaryExpression: require('./lib/uri/BinaryExpression'),
        UnaryExpression: require('./lib/uri/UnaryExpression'),
        MethodExpression: require('./lib/uri/MethodExpression'),
        apply: {
            Transformation: require('./lib/uri/apply/Transformation'),
            AggregateExpression: require('./lib/uri/apply/AggregateExpression'),
            BottomTopTransformation: require('./lib/uri/apply/BottomTopTransformation')
        }
    },
    utils: {
        PrimitiveValueDecoder: require('./lib/utils/PrimitiveValueDecoder'),
        PrimitiveValueEncoder: require('./lib/utils/PrimitiveValueEncoder')
    },
    validator: {
        ParameterValidator: require('./lib/validator/ParameterValidator'),
        ValueValidator: require('./lib/validator/ValueValidator')
    }
};
