module.exports = {

  features: {
    fiori_preview: true,
    skip_unused: true,
    one_model: true,
    snapi: true,
    localized: true
  },
  'log-level': 'warn',

  folders: { // IMPORTANT: order is significant for cds.load('*')
    db: 'db/',
    srv: 'srv/',
    app: 'app/',
  },

  i18n: {
    folders: ['_i18n', 'i18n', 'assets/i18n'],
    for_sqlite: ['de', 'fr'],
    languages: 'all', // or array.  'all': whatever language files are found next to models
    default_language: 'en',
    white_list: [
      'zh_CN',
      'zh_HK',
      'zh_TW',
      'en_GB',
      'fr_CA',
      'pt_PT',
      'es_CO',
      'es_MX',
      'en_US_x_saptrc',
      'en_US_x_sappsd'
    ]
  },

  requires: {
    "db": undefined,
    "app-service": {
      // this is the default implementation used for provided services
      impl: '@sap/cds-runtime/lib/cds-services/services/Service.js'
    },
    "auth": {
      '[development]': { kind: 'mocked-auth' },
      '[production]': { kind: 'JWT-auth' }
    },
    "dummy-auth": {
      strategy: 'dummy',
    },
    "mocked-auth": {
      strategy: 'mock',
      users: {
        alice: { roles: ['admin'] },
        bob: { roles: ['builder'] },
        '*': true
      }
    },
    "JWT-auth": {
      strategy: 'JWT',
    },
    destinations: undefined,
    monitoring: undefined,
    logging: undefined,
    audit: undefined,
    "sql": {
      '[development]': { kind: 'sqlite', credentials: { database: ':memory:' } },
      '[production]': { use: 'hana' },
    },
    "sqlite": {
      // use: '@sap/cds-sqlite', // enforce using sqlite when accessed through <sql>
      use: 'sqlite', // enforce using sqlite when accessed through <sql>
      credentials: { database: 'sqlite.db' },
      impl: '@sap/cds-runtime/lib/sqlite/Service.js'
    },
    "hana": {
      // use: '@sap/cds-hana', // enforce using hana when accessed through <sql>
      use: 'hana', // enforce using hana when accessed through <sql>
      impl: '@sap/cds-runtime/lib/hana/Service.js'
    },
    "rest": {
      impl: '@sap/cds-runtime/lib/rest/service.js'
    },
    "odata": {
      impl: '@sap/cds-runtime/lib/rest/service.js'
    },
    "[development]": {
      "messaging": { kind: 'local-messaging' }
    },
    "local-messaging": {
      impl: '@sap/cds-runtime/lib/messaging/service.js'
    },
    "file-based-messaging": {
      impl: "@sap/cds-runtime/lib/messaging/file-based.js",
      credentials: { file:'~/.cds-msg-box' }
    },
    "enterprise-messaging": {
      impl: '@sap/cds-runtime/lib/messaging/enterprise-messaging.js'
    },
    'message-queuing': {
      impl: '@sap/cds-runtime/lib/messaging/message-queuing.js'
    },
    "composite-messaging": {
      impl: "@sap/cds-runtime/lib/messaging/composite.js"
    }
  },

  odata: {
    version: 'v4',
    format: 'flat', // or 'structured'
    containment: false,
    proxies: false,
  },

  sql: {
    names: 'plain' // or 'quoted', or 'hdbcds'
  },

  hana: {
    'deploy-format': 'hdbcds' // or 'hdbtable'
  },

  build: {
    target: 'gen'
  },

  mtx: {
    api: {
      model: true,
      provisioning: true,
      metadata: true
    },
    domain: '__default__'
  },

  cdsc: {
    // toSql: { associations: 'joins' },
    // newCsn: true,
  },

  query: {
    limit: {
      max: 1000
    }
  },

}
