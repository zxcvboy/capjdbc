const cwd = process.env._original_cwd || process.cwd()
const {relative} = require('path'), _relative = file => relative (cwd,file)
const [,main,cmd] = process.argv

exports = module.exports = error
function error (msg, _base = error) {
    const e = msg instanceof Error ? msg : new Error (msg)
    Error.captureStackTrace(e,_base)
    throw e
}


exports.duplicate_cds = (...locations) => error (`Duplicate @sap/cds/common!

There are duplicate versions of @sap/cds loaded from these locations:

    ${locations.map(_relative).join('\n    ')}

To fix this, check all dependencies to "@sap/cds" in your package.json and
those of reused packages and ensure they allow deduped use of @sap/cds.
`)


exports.no_primary_db = (p,_base) => error (`Not connected to primary datasource!

    Invalid attempt to use global 'cds.${p}' without prior connect
    to primary datasource, i.e. cds.connect.to('db').
    ${ main.endsWith('cds') && cmd in {run:1,serve:1} ? `
    Please configure one thru 'cds.requires.db' or use in-memory db:
    cds ${cmd} --in-memory` : ''}`
,_base)
