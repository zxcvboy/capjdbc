
const cds = require('..')
const { path4 } = cds.serve
const { isfile, path: {join, normalize, dirname} } = cds.utils

// Produces information on provided services in the model:
//   name, expected URL path at runtime,...
module.exports = (model) => {
  model = cds.reflect (model)
  return model.all ('service').map (service => {
    return {
      name: service.name,
      urlPath: _urlPath4 (service, model), // the URL path that is *likely* effective at runtime
      destination: 'srv-api' // the name to register in xs-app.json.  TODO align this w/ deployment manifest
    }
  })
}

function _urlPath4 (service, model) {
  const p = _javaPath4(service, model) || path4(service)
  //  /foo/bar  ->  foo/bar/
  return normalize (p.replace(/^\/+/, '') + '/')
}

function _javaPath4 (service, model) {
  const pom = model._sources.find (s => isfile (join (dirname(s), 'pom.xml')))
  if (pom)  return 'odata/v4/' + service.name
  // Deliberately not check for old v2, since this service list is only needed for
  // new v4 UI wizard.  Otherwise we would need to read the pom.xml content.
}
