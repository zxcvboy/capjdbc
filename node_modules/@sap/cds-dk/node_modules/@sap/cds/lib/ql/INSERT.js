const { Query } = require('./Whereable')
const is_array = Array.isArray
const $ = Object.assign

module.exports = class INSERT extends Query {
  static get _() {
    return $((..._) => new this().entries(..._), {
      into: (..._) => new this().into(..._),
    })
  }

  into(entity, ...data) {
    this._.into = this.target(entity).name
    if (data.length) this.entries(...data)
    return this
  }

  entries(...x) {
    this._.entries = is_array(x[0]) ? x[0] : x
    return this
  }
  columns(...x) {
    this._.columns = is_array(x[0]) ? x[0] : x
    return this
  }
  values(...x) {
    this._.values = is_array(x[0]) ? x[0] : x
    return this
  }
  rows(...x) {
    this._.rows = is_array(x[0]) && is_array(x[0][0]) ? x[0] : x
    return this
  }
  as(query) {
    this._.as = query
    return this
  }
  valueOf() {
    return super.valueOf('INSERT INTO')
  }
}
