class User {
  constructor (_) {
    if (new.target === Anonymous) return; if (_ === undefined) return new Anonymous
    if (typeof _ === 'string') { this.id = _; return }
    // copy all properties, overriding getters
    for (let each in _) super[each] = _[each]
    if (Array.isArray(_._roles)) this._roles = _._roles.reduce((p,n)=>{p[n]=1; return p},{})
  }

  get attr() { return super.attr = {} }

  get locale() {
    // REVISIT: this._req looks like another thing that either needs to be standardized or removed
    const req = this._req, locale = req && (
      // REVISIT: both req.query and req.headers are guaranteed to always exist by express.js and Node.js docs -> so, why do we need these double checks?
      req.query && req.query['sap-language'] ||
      req.headers && ( req.headers['x-sap-request-language'] || req.headers['accept-language'] )
    )
    return super.locale = WHITE_LIST[locale] || locale.match(/[A-Za-z]+/)[0]
  }

  get _roles(){ return super._roles = {
    'identified-user': !!this.id,
    'authenticated-user': !!this.id && this.authLevel !== 'weak' // REVISIT: _.authLevel
  }}

  is (role) { return role === 'any' || this._roles[role] }
  valueOf() { return this.id }
}


class Anonymous extends User { is(r){return r==='any'} get _roles(){return{}} }
Anonymous.prototype._is_anonymous = true
Anonymous.prototype.id = 'anonymous'

const cds = require('..'), {i18n} = cds.env
const WHITE_LIST = i18n.white_list.reduce((p,n)=>{p[n]=n;return p},{ undefined: i18n.default_language })

module.exports = User
