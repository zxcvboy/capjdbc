// The module defines the JSON form of the defined objects which are part of an OpenAPI/Swagger doc
// Objects declaration is as per the specification in https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md
module.exports = {
  // "This is the root document object of the OpenAPI document."
  // it has the fixed fields - openapi, info, servers, paths, components, security, tags, externalDocs.
  // openapi, infom paths are the required ones
  openAPIObject: function () {
    return {
      'openapi': '3.0.0',
      'info': {
        'version': '',
        'title': ''
      },
      'paths': {},
      'components': {
        'schemas': {}
      }
    };
  },

  getDefaultResponseSchemaObj: function () {
    return {
      'description': 'unexpected error',
      'content': {
        'application/json': {
          'schema': this.referenceObject('#/components/schemas', 'Error')
        }
      }
    }
  },

  referenceObject: function (location, component) {
    return {
      '$ref': `${location}/${component}`
    }
  },

  operationObjGET: function () {
    return {
      'summary': '',
      'operationId': '',
      'tags': [],
      'responses': {
        200: {
          'description': 'Expected response to a valid request',
          'content': {
            'application/json': {
              'schema': {
                '$ref': ''
              }
            }
          }
        },
        'default': this.getDefaultResponseSchemaObj()
      }
    }
  },

  operationObjPUT: function () {
    return this.operationObjPOST();
  },

  operationObjPOST: function () {
    return {
      'summary': '',
      'operationId': '',
      'tags': [],
      'responses': {
        'default': this.getDefaultResponseSchemaObj()
      }
    }
  },

  operationObjDELETE: function () {
    return {
      'summary': '',
      'operationId': '',
      'tags': [],
      'responses': {
        'default': this.getDefaultResponseSchemaObj()
      }
    }
  },

  operationObjOPTIONS: function () { },

  operationObjHEAD: function () {
    return {
      'summary': '',
      'operationId': '',
      'tags': [],
      'responses': {
        200: {
          'description': 'Expected headers'
        },
        'default': this.getDefaultResponseSchemaObj()
      }
    }
  },

  operationObjPATCH: function () {
    return {
      'summary': '',
      'operationId': '',
      'tags': [],
      'responses': {
        204: {
          'description': 'No content'
        },
        'default': this.getDefaultResponseSchemaObj()
      }
    }
  },

  operationObjTRACE: function () { },

  responseContenDef: function () {
    return {
      'description': 'Expected response to a valid request',
      'content': {
        'application/json': {
          'schema': {
            '$ref': ''
          }
        }
      }
    }
  },

  nextPageHeaderObj: function () {
    return {
      'x-next': {
        'description': 'A link to the next page of responses',
        'schema': {
          'type': 'string'
        }
      }
    }
  },

  getNullResponse: function () {
    return {
      '201': {
        'description': 'Null response'
      }
    }
  },
  defaultErrorObj: function () {
    return {
      'Error': {
        'required': [
          'code',
          'message'
        ],
        'properties': {
          'code': {
            'type': 'integer',
            'format': 'int32'
          },
          'message': {
            'type': 'string'
          }
        }
      }
    }
  }
}
