'use strict';
const { forEachDefinition, forEachMemberRecursively, forAllQueries } = require('../../model/csnUtils');
const enrich = require('./enricher');

/**
 * Run the given validations for each artifact and for each member recursively
 *
 * @param {CSN.Model} csn CSN to check
 * @param {object} that Will be provided to the validators via "this"
 * @param {Function[]} [memberValidators=[]] Validations on member-level
 * @param {Function[]} [artifactValidators=[]] Validations on artifact-level
 * @param {Function[]} [queryValidators=[]] Validations on query-level
 */
function validate(csn, that, memberValidators=[], artifactValidators=[], queryValidators=[]){
  enrich(csn);

  forEachDefinition(csn, (artifact, artifactName, prop, path) => {
    artifactValidators.forEach(artifactValidator => artifactValidator.bind(that)(artifact, artifactName, prop, path));
    if(memberValidators.length)
      forEachMemberRecursively( artifact, memberValidators.map(v=>v.bind(that)), path );

    if(queryValidators.length && artifact.query) {
      forAllQueries(artifact.query, queryValidators.map(v=>v.bind(that)), path.concat(['query']));
    }
  });
}

module.exports = validate;
