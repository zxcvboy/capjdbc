"use strict";
/* Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved. */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.kibana = void 0;
var winston_1 = require("winston");
var combine = winston_1.format.combine, timestamp = winston_1.format.timestamp, json = winston_1.format.json;
// This is a hack to ensure that error logging works in browsers. Necessary due to: https://github.com/winstonjs/logform/issues/97
// eslint-disable-next-line import/no-internal-modules
var errors = winston_1.format.errors || require('logform/errors');
/**
 * Format for logging in Kibana.
 */
exports.kibana = combine(errors({ stack: true }), timestamp(), winston_1.format(function (info) { return (__assign(__assign({}, info), { msg: info.message, written_ts: new Date(info.timestamp).getTime(), written_at: info.timestamp })); })(), json());
//# sourceMappingURL=kibana.js.map