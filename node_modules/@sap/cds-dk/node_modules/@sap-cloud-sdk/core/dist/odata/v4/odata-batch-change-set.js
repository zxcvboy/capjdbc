"use strict";
/* Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.toBatchChangeSet = exports.ODataBatchChangeSet = void 0;
var uuid_1 = require("uuid");
var common_1 = require("../common");
var odata_batch_request_util_1 = require("../common/request/odata-batch-request-util");
var request_builder_1 = require("./request-builder");
var batch_content_type_prefix = 'Content-Type: multipart/mixed; boundary=changeset_';
var change_set_start_prefix = '--changeset_';
var request_content_type_line = 'Content-Type: application/json';
var request_accept_line = 'Accept: application/json';
var request_if_match_key = 'If-Match: ';
/**
 * OData batch change set, which holds a collection of write operations.
 */
var ODataBatchChangeSet = /** @class */ (function () {
    function ODataBatchChangeSet(requests, changeSetId) {
        if (changeSetId === void 0) { changeSetId = uuid_1.v4(); }
        this.requests = requests;
        this.changeSetId = changeSetId;
    }
    return ODataBatchChangeSet;
}());
exports.ODataBatchChangeSet = ODataBatchChangeSet;
/**
 * Build the change set payload as the partial payload of the batch request.
 * @param changeSet - Change set holds a collection of write operations.
 * @returns The generated payload from the given change set.
 */
function toBatchChangeSet(changeSet) {
    var changeSetBody = toBatchChangeSetBody(changeSet);
    if (!changeSetBody) {
        return;
    }
    return [
        "" + batch_content_type_prefix + changeSet.changeSetId,
        '',
        changeSetBody
    ].join('\n');
}
exports.toBatchChangeSet = toBatchChangeSet;
function toBatchChangeSetBody(changeSet) {
    if (changeSet.requests.length === 0) {
        return;
    }
    var requests = changeSet.requests.map(function (r) {
        return toRequestPayload(r, changeSet.changeSetId);
    });
    return Array.prototype
        .concat(requests, "" + change_set_start_prefix + changeSet.changeSetId + "--")
        .join('\n');
}
/**
 * Build the request payload of a write operation.
 * Below is an generated example, where the empty line after "Accept: application/json" is mandatory.
 * *** example starts ***
 * --changeset_1234
 * Content-Type: application/http
 * Content-Transfer-Encoding: binary
 *
 * PATCH /someUrl/API_BUSINESS_PARTNER/A_BusinessPartnerAddress(BusinessPartner='123',AddressID='321') HTTP/1.1
 * Content-Type: application/json
 * Accept: application/json
 *
 * {
 * "HouseNumber": "99"
 * }
 *
 * *** example ends ***
 * @param request - A request build of a write operation.
 * @param changeSetId - The change set identifier
 * @returns The generated request payload
 */
function toRequestPayload(request, changeSetId) {
    if (request instanceof request_builder_1.CreateRequestBuilder ||
        request instanceof request_builder_1.UpdateRequestBuilder) {
        request.prepare();
    }
    var etagValue = toEtagHeaderValue(request) || '';
    var lines = [
        "" + change_set_start_prefix + changeSetId,
        common_1.part_content_type_line,
        common_1.content_transfer_encoding_line,
        '',
        odata_batch_request_util_1.getRequestLine(request),
        request_content_type_line,
        request_accept_line,
        etagValue ? "" + request_if_match_key + etagValue : '',
        '',
        JSON.stringify(request.requestConfig.payload),
        ''
    ];
    return lines.join('\n');
}
function toEtagHeaderValue(request) {
    if (request instanceof request_builder_1.UpdateRequestBuilder ||
        request instanceof request_builder_1.DeleteRequestBuilder) {
        if (request.requestConfig.versionIdentifierIgnored) {
            return '*';
        }
        return request.requestConfig.eTag ? request.requestConfig.eTag : undefined;
    }
    return;
}
//# sourceMappingURL=odata-batch-change-set.js.map