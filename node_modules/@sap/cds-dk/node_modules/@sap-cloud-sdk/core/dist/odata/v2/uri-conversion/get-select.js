"use strict";
/* Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved. */
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSelect = void 0;
var common_1 = require("../../common");
/**
 * Get an object containing the given Selectables as query parameter, or an empty object if none were given.
 * This retrieves where in addition to the selection (`select`) there is also an expansion (`expand`) needed.
 *
 * @typeparam EntityT - Type of the entity to get the selection for
 * @param selects - The list of selectables to be transformed to query parameters
 * @returns An object containing the query parameters or an empty object
 */
function getSelect(selects) {
    if (selects === void 0) { selects = []; }
    var select = getSelectsAsStrings(selects);
    return select.length ? { select: filterSelects(select).join(',') } : {};
}
exports.getSelect = getSelect;
function selectionLevel(select) {
    return select.split('/').slice(0, -1).join('/');
}
function filterSelects(selects) {
    var allFieldSelects = selects.filter(function (select) { return select.endsWith('*'); });
    var selectionLevels = allFieldSelects.map(function (select) { return selectionLevel(select); });
    return __spreadArrays(allFieldSelects, selects.filter(function (select) { return !selectionLevels.includes(selectionLevel(select)); }));
}
function getSelectsAsStrings(selectables, initialSelect, parent) {
    if (initialSelect === void 0) { initialSelect = []; }
    if (parent === void 0) { parent = ''; }
    return selectables.reduce(function (select, selectable) {
        var fullFieldName = getPath(parent, selectable._fieldName);
        if (selectable instanceof common_1.Link) {
            if (selectable._selects.length) {
                return getSelectsAsStrings(selectable._selects, select, fullFieldName);
            }
            return __spreadArrays(select, [fullFieldName + "/*"]);
        }
        return __spreadArrays(select, [fullFieldName]);
    }, initialSelect);
}
function getPath(parent, fieldName) {
    if (parent) {
        return parent + "/" + fieldName;
    }
    return fieldName;
}
//# sourceMappingURL=get-select.js.map