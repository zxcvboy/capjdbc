"use strict";
/* Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved. */
/* eslint-disable max-classes-per-file */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComplexTypeStringPropertyField = exports.StringField = void 0;
var complex_type_field_1 = require("./complex-type-field");
var edm_type_field_1 = require("./edm-type-field");
/**
 * Represents a property with a string value.
 *
 * @typeparam EntityT - Type of the entity the field belongs to
 */
var StringFieldBase = /** @class */ (function (_super) {
    __extends(StringFieldBase, _super);
    function StringFieldBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StringFieldBase;
}(edm_type_field_1.EdmTypeField));
/**
 * Represents a selectable property with a string value.
 *
 * @typeparam EntityT - Type of the entity the field belongs to
 */
var StringField = /** @class */ (function (_super) {
    __extends(StringField, _super);
    function StringField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StringField;
}(StringFieldBase));
exports.StringField = StringField;
/**
 * Represents a complex type property with a string value.
 *
 * @typeparam EntityT - Type of the entity the field belongs to
 */
var ComplexTypeStringPropertyField = /** @class */ (function (_super) {
    __extends(ComplexTypeStringPropertyField, _super);
    /*
     * Union of the two possible constructors.
     */
    function ComplexTypeStringPropertyField(fieldName, fieldOf, arg3, arg4) {
        var _this = _super.call(this, fieldName, complex_type_field_1.getEntityConstructor(fieldOf), complex_type_field_1.getEdmType(arg3, arg4)) || this;
        _this.fieldOf = fieldOf;
        return _this;
    }
    /**
     * Path to the field to be used in filter and order by queries. Combines the parent complex type name with the field name.
     *
     * @returns Path to the field to be used in filter and order by queries.
     */
    ComplexTypeStringPropertyField.prototype.fieldPath = function () {
        return this.fieldOf instanceof complex_type_field_1.ComplexTypeField
            ? this.fieldOf.fieldPath() + "/" + this._fieldName
            : this._fieldName;
    };
    return ComplexTypeStringPropertyField;
}(StringFieldBase));
exports.ComplexTypeStringPropertyField = ComplexTypeStringPropertyField;
//# sourceMappingURL=string-field.js.map