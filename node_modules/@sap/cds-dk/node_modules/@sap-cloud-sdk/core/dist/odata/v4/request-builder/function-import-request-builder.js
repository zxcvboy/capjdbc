"use strict";
/* Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved. */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionImportRequestBuilder = void 0;
var uri_conversion_1 = require("../uri-conversion");
var action_function_import_request_builder_base_1 = require("../../common/request-builder/action-function-import-request-builder-base");
var odata_function_import_request_config_1 = require("../../common/request/odata-function-import-request-config");
/**
 * Create OData request to execute a function import.
 * @typeparam ParametersT - Type of the function import parameters
 * @typeparam ReturnT - Type of the function import return value
 */
var FunctionImportRequestBuilder = /** @class */ (function (_super) {
    __extends(FunctionImportRequestBuilder, _super);
    /**
     * Creates an instance of FunctionImportRequestBuilder.
     * @param defaultServicePath - Default path for the service the function belongs to
     * @param functionImportName - The name of the function import.
     * @param responseTransformer - Transformation function for the response
     * @param parameters - Parameters to be set in the function
     */
    function FunctionImportRequestBuilder(defaultServicePath, functionImportName, responseTransformer, parameters) {
        var _this = _super.call(this, responseTransformer, new odata_function_import_request_config_1.ODataFunctionImportRequestConfig('get', defaultServicePath, functionImportName, parameters, uri_conversion_1.oDataUri)) || this;
        _this.responseTransformer = responseTransformer;
        return _this;
    }
    return FunctionImportRequestBuilder;
}(action_function_import_request_builder_base_1.ActionFunctionImportRequestBuilderBase));
exports.FunctionImportRequestBuilder = FunctionImportRequestBuilder;
//# sourceMappingURL=function-import-request-builder.js.map