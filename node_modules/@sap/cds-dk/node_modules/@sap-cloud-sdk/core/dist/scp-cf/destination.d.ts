import { MapType } from '@sap-cloud-sdk/util';
import { AuthenticationType, Destination, DestinationNameAndJwt } from './destination-service-types';
/**
 * Takes an existing or a parsed destination and returns an SDK compatible destination object.
 *
 * @param destination - An object that adheres to the [[Destination]] interface.
 * @returns An SDK compatible destination object.
 */
export declare function sanitizeDestination(destination: MapType<any>): Destination;
/**
 * Takes a JSON object returned by any of the calls to the destination service and returns an SDK compatible destination object.
 * This function only accepts destination configurations of type 'HTTP' and will error if no 'URL' is given.
 *
 * @param destinationJson - A JSON object returned by the destination service.
 * @returns An SDK compatible destination object.
 */
export declare function parseDestination(destinationJson: DestinationJson | DestinationConfiguration): Destination;
/**
 * @hidden
 */
export declare function toDestinationNameUrl(destination: Destination | DestinationNameAndJwt): string;
/**
 * Destination configuration alongside authtokens and certificates.
 */
export interface DestinationJson {
    [key: string]: any;
    destinationConfiguration: DestinationConfiguration;
    authTokens?: MapType<string>[];
    certificates?: MapType<string>[];
}
/**
 * Configuration of a destination as it is available through the destination service.
 */
export interface DestinationConfiguration {
    [key: string]: any;
    URL: string;
    Name?: string;
    ProxyType?: string;
    'sap-client'?: string;
    User?: string;
    Password?: string;
    Authentication?: AuthenticationType;
    TrustAll?: string;
    tokenServiceURL?: string;
    tokenServiceUsername?: string;
    tokenServicePass?: string;
    clientId?: string;
    clientSecret?: string;
    SystemUser?: string;
    Type?: 'HTTP' | 'LDAP' | 'MAIL' | 'RFC';
}
/**
 * @hidden
 */
export declare function isDestinationConfiguration(destination: any): destination is DestinationConfiguration;
/**
 * @hidden
 */
export declare function isDestinationJson(destination: any): destination is DestinationJson;
//# sourceMappingURL=destination.d.ts.map