const path = require('path')
const TemplateBase = require('../templateBase');
const ProjectReader = require('../mta/projectReader')


module.exports = class MtaTemplate extends TemplateBase {
    constructor(projectPath, generator) {
        super(projectPath, generator, __dirname);
        this.projectReader = new ProjectReader(this)
    }

    getPriority() {
        return -Number.MAX_VALUE;
    }

    async checkEnabled() {
        if (this.options.force) {
            return true;
        }

        if (await this.fsUtil.pathExists(path.join(this.projectPath, 'mta.yaml'))) {
            throw new Error(`File mta.yaml already exists in current folder. Use --force to overwrite.`);
        }

        return true;
    }

    async run() {
        const projectDescriptor = await this.projectReader.read()
        const content = await this.processTemplates(projectDescriptor)
        await this.writeFiles(content)
    }

    async processTemplates(projectDescriptor) {
        return this.templateUtil._processTemplateFile(path.join(__dirname, 'files/mta.hbs'), projectDescriptor)
    }

    async writeFiles(content) {
        await this.fsUtil.writeFile(path.join(this.projectPath, "mta.yaml"), content)
    }
}
