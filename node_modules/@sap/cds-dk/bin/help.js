/* eslint-disable no-console */
module.exports = exports = Object.assign (help, {help:`
# USAGE

    *cds* <command> [<args>]
    *cds* <src>  =  *cds compile* <src>
    *cds*        =  *cds help*

# COMMANDS

    *i* | *init*       jump-start cds-based projects
    *a* | *add*        add a feature to an existing project
    *m* | *import*     add models from external sources
    *c* | *compile*    compile cds models to different outputs
    *s* | *serve*      run your services in local server
    *w* | *watch*      run and restart on file changes
    *r* | *repl*       read-eval-event loop
    *e* | *env*        inspect configuration
    *b* | *build*      prepare for deployment
    *d* | *deploy*     deploy to databases or cloud
    *l* | *login*      login to extendable SaaS application
    *o* | *logout*     logout from extendable SaaS application
    *v* | *version*    get detailed version information
    *?* | *help*       get detailed usage information

  Learn more about each command using:
  *cds help* <command> or
  *cds* <command> *--help*

`})

function help (topic) {
  if (Array.isArray(topic))  topic = topic[0]
  const task = !topic ? help : this.load (this.Shortcuts[topic] || topic)
  if (task && task.help) console.log (task.help
    .replace(/\n# ([^\n]*)\n/g, `\n\x1b[1m$1\x1b[0m\n`)
    .replace(/ \*([^*]+)\*/g,   ` \x1b[1m$1\x1b[0m`)
    .replace(/ _([^_]+)_/g,     ` \x1b[4m$1\x1b[0m`)
  )
  else throw new Error(`Didn't find a help topic for '${ topic.name || topic }'.`)
}
